{"version":3,"sources":["proto/awesome.js","App.js","serviceWorker.js","index.js"],"names":["Quote","exports","read","pbf","end","readFields","_readField","rec","instrumentId","bid","ask","time","tag","obj","Recipient","readVarint","pos","readString","write","writeMessage","writeStringField","writeVarintField","brokerId","accountId","defaultQuote","App","state","storageUrl","localStorage","getItem","userId","broker","account","authorized","loading","socket","instruments","markets","handleInputChange","event","key","value","target","setItem","_this","setState","Object","defineProperty","handleConnectButtonClick","_this$state","close","WebSocket","split","binaryType","e","Error","initWebSocket","_this$state2","onopen","request","JSON","stringify","user","onmessage","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","message","data","_this$state3","currentMarket","_data","market","type","wrap","_context","prev","next","abrupt","console","timeEnd","Pbf","parse","t0","s","sub","sym","forEach","el","prevState","objectSpread","stop","this","_x","apply","arguments","onerror","error","log","body","send","handleInstrumentClick","_ref2","hashCode","_this$state4","marketsObj","syms","keys","push","str","hash","i","length","charCodeAt","stringToHash","b","getInstruments","_this$state5","pingPong","prevProps","_this2","_this$state6","button","react_default","createElement","onClick","className","onChange","map","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.167af8aa.chunk.js","sourcesContent":["// Quote ========================================\n\nvar Quote = exports.Quote = {};\n\nQuote.read = function (pbf, end) {\n    return pbf.readFields(Quote._readField, {rec: null, instrumentId: \"\", bid: \"\", ask: \"\", time: 0}, end);\n};\nQuote._readField = function (tag, obj, pbf) {\n    if (tag === 1) obj.rec = Recipient.read(pbf, pbf.readVarint() + pbf.pos);\n    else if (tag === 2) obj.instrumentId = pbf.readString();\n    else if (tag === 3) obj.bid = pbf.readString();\n    else if (tag === 4) obj.ask = pbf.readString();\n    else if (tag === 5) obj.time = pbf.readVarint(true);\n};\nQuote.write = function (obj, pbf) {\n    if (obj.rec) pbf.writeMessage(1, Recipient.write, obj.rec);\n    if (obj.instrumentId) pbf.writeStringField(2, obj.instrumentId);\n    if (obj.bid) pbf.writeStringField(3, obj.bid);\n    if (obj.ask) pbf.writeStringField(4, obj.ask);\n    if (obj.time) pbf.writeVarintField(5, obj.time);\n};\n\n// Recipient ========================================\n\nvar Recipient = exports.Recipient = {};\n\nRecipient.read = function (pbf, end) {\n    return pbf.readFields(Recipient._readField, {brokerId: 0, accountId: 0}, end);\n};\nRecipient._readField = function (tag, obj, pbf) {\n    if (tag === 1) obj.brokerId = pbf.readVarint(true);\n    else if (tag === 2) obj.accountId = pbf.readVarint(true);\n};\nRecipient.write = function (obj, pbf) {\n    if (obj.brokerId) pbf.writeVarintField(1, obj.brokerId);\n    if (obj.accountId) pbf.writeVarintField(2, obj.accountId);\n};\n","import React from \"react\";\nimport Pbf from \"pbf\";\nimport { Quote } from \"./proto/awesome\";\n\nconst defaultQuote = {\n  instrumentId: 0,\n  bid: 0,\n  ask: 0,\n  time: 0\n};\n\nclass App extends React.Component {\n  state = {\n    storageUrl: localStorage.getItem(\"storageUrl\") || \"\",\n    userId: localStorage.getItem(\"userId\") || \"\",\n    broker: localStorage.getItem(\"broker\") || \"\",\n    account: localStorage.getItem(\"account\") || \"\",\n    authorized: false,\n    loading: false,\n    socket: null,\n    instruments: [],\n    markets: {}\n  };\n\n  handleInputChange = (event, key) => {\n    const { value } = event.target;\n    localStorage.setItem(key, value);\n    this.setState({ [key]: value });\n  };\n\n  handleConnectButtonClick = () => {\n    const { authorized, storageUrl, userId } = this.state;\n    let { socket } = this.state;\n\n    if (!authorized) {\n      try {\n        socket = new WebSocket(storageUrl.split(\"?\")[0] + \"?user=\" + userId);\n        socket.binaryType = \"arraybuffer\";\n      } catch (e) {\n        throw new Error(e);\n      }\n\n      this.setState({ socket, loading: true });\n    } else if (socket && authorized) {\n      this.setState({ instruments: [], socket: null });\n\n      socket.close();\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!prevState.socket && this.state.socket) {\n      this.initWebSocket();\n    }\n  }\n\n  initWebSocket = () => {\n    let { socket, userId } = this.state;\n\n    socket.onopen = () => {\n      this.request(JSON.stringify({ user: { userId } }));\n    };\n\n    socket.onmessage = async message => {\n      let data;\n\n      let { authorized, instruments, currentMarket, markets } = this.state;\n\n      if (message.data === \"1\") return console.timeEnd(\"Ping-Pong\");\n\n      if (typeof message.data !== \"string\") {\n        let pbf = new Pbf(message.data);\n\n        data = Quote.read(pbf);\n\n        const { instrumentId, bid, ask, time } = data;\n\n        let market = markets[instrumentId];\n\n        if (!market) {\n          market = {};\n          markets[instrumentId] = market;\n        }\n\n        market.instrumentId = instrumentId;\n        market.bid = bid;\n        market.ask = ask;\n        market.time = time;\n      } else {\n\n        data = JSON.parse(message.data);\n\n      }\n\n      const { type } = data;\n\n      switch (type) {\n        case 0: {\n          authorized = true;\n          break;\n        }\n        case 1: {\n          authorized = false;\n          break;\n        }\n        case 7: {\n          instruments = data.instruments;\n          break;\n        }\n        case 10: {\n          data.s.sub[0].sym.forEach(el => {\n            markets[el] = {}\n          });\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n\n      this.setState(prevState => ({\n        ...prevState,\n        authorized,\n        loading: false,\n        socket,\n        instruments,\n        currentMarket,\n        markets\n      }));\n    };\n\n    socket.onerror = error => {\n      console.log(\"asdasd\");\n    };\n  };\n\n  request = body => {\n    const { socket } = this.state;\n    socket.send(body);\n  };\n\n  handleInstrumentClick = ({ sym }) => {\n    let { broker, account, markets } = this.state;\n\n    let marketsObj = { ...markets };\n    let syms = [],\n      hashCode;\n\n    if (marketsObj[sym]) {\n      delete marketsObj[sym];\n    } else {\n      marketsObj[sym] = { ...defaultQuote };\n    }\n\n    Object.keys(marketsObj).forEach(el => syms.push(el));\n\n    this.setState({ markets: marketsObj });\n\n    hashCode = stringToHash(broker + \"&\" + account + \"&\" + syms);\n\n    this.request(\n      JSON.stringify({\n        type: 1,\n        s: {\n          sub: [{ rec: { b: broker, a: account }, sym: syms }],\n          hash: hashCode\n        }\n      })\n    );\n\n    \n  };\n\n  getInstruments = () => {\n    const { broker, account, socket } = this.state;\n\n    socket.send(JSON.stringify({ type: 2, rec: { b: broker, a: account } }));\n  };\n\n  pingPong = () => {\n    const { socket } = this.state;\n    console.time(\"Ping-Pong\");\n    socket.send(\"0\");\n  };\n\n  render() {\n    var { authorized, loading, instruments, markets } = this.state;\n    const button = loading ? (\n      <span>Loading</span>\n    ) : (\n      <button type=\"button\" onClick={this.handleConnectButtonClick}>\n        {authorized ? \"Disconnect\" : \"Connect\"}\n      </button>\n    );\n    return (\n      <div>\n        <div className=\"control\">\n          <div>\n            <div className=\"form-group\">\n              <label>Ендпоинт (ws[s]://...)</label>\n              <input\n                value={this.state.storageUrl}\n                onChange={e => this.handleInputChange(e, \"storageUrl\")}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Юзер</label>\n              <input\n                value={this.state.userId}\n                onChange={e => this.handleInputChange(e, \"userId\")}\n              />\n            </div>\n          </div>\n\n          {authorized && (\n            <div>\n              <div className=\"form-group\">\n                <label>Брокер</label>\n                <input\n                  value={this.state.broker}\n                  onChange={e => this.handleInputChange(e, \"broker\")}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Аккаунт</label>\n                <input\n                  value={this.state.account}\n                  onChange={e => this.handleInputChange(e, \"account\")}\n                />\n              </div>\n            </div>\n          )}\n\n          {button}\n        </div>\n\n        {authorized && (\n          <div>\n            <button onClick={this.getInstruments}>Get Instruments</button>\n            <button onClick={this.pingPong}>Ping-Pong</button>\n          </div>\n        )}\n\n        {instruments.map((el, i) => (\n          <button\n            className={markets[el.sym] && \"active\"}\n            key={i}\n            onClick={() => this.handleInstrumentClick({ sym: el.sym })}\n          >\n            {el.sym}\n          </button>\n        ))}\n\n        <hr />\n\n        <div className=\"body_wrap\">\n          <div className=\"trading_wrap\">\n            {Object.keys(markets).map(key => {\n              return (\n                <div key={key} className=\"trading\">\n                  <ul>\n                    <li>\n                      <b>instrument:</b> {markets[key].instrumentId}\n                    </li>\n                    <li>\n                      <b>bid:</b> {markets[key].bid}, <b>ask:</b>{\" \"}\n                      {markets[key].ask}\n                    </li>\n                    <li>\n                      <b>time:</b> {markets[key].time}\n                    </li>\n                  </ul>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction stringToHash(str) {\n  var hash = 5381,\n    i = str.length;\n\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  return hash >>> 0;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}